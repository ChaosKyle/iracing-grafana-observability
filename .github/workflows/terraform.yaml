name: 'Terraform CI/CD'

on:
  push:
    branches: [ main, master ]
    paths:
      - 'terraform/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'terraform/**'
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday at midnight

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: dev

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform/environments/dev
    
    env:
      TF_VAR_grafana_auth: ${{ secrets.GRAFANA_AUTH }}
      TF_VAR_grafana_admin_pass: ${{ secrets.GRAFANA_ADMIN_PASS }}
      TF_VAR_influxdb_admin_password: ${{ secrets.INFLUXDB_ADMIN_PASSWORD }}
      TF_VAR_postgres_password: ${{ secrets.POSTGRES_PASSWORD }}

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.7

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Validate the Terraform code
    - name: Terraform Validate
      run: terraform validate

    # Generate Terraform plan for pull requests
    - name: Terraform Plan
      run: terraform plan -no-color
      if: github.event_name == 'pull_request'

    # Apply Terraform changes for main branch or scheduled runs
    - name: Terraform Apply
      if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && (github.event_name == 'push' || github.event_name == 'schedule')
      run: terraform apply -auto-approve