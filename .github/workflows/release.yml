name: Release Workflow

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (without v prefix)'
        required: true
        type: string

env:
  COLLECTOR_IMAGE_NAME: iracing-collector
  DASHBOARD_IMAGE_NAME: iracing-dashboard
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}/iracing-grafana-observability

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Get version from tag
        id: get-version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          fi
          echo "Using version: ${{ steps.get-version.outputs.version }}"

  build-and-push:
    needs: prepare
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push collector image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/collector/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ env.COLLECTOR_IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ env.COLLECTOR_IMAGE_NAME }}:${{ needs.prepare.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
            
      - name: Build and push dashboard image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/dashboard/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ env.DASHBOARD_IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ env.DASHBOARD_IMAGE_NAME }}:${{ needs.prepare.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-release:
    needs: [prepare, build-and-push]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4.5.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ needs.prepare.outputs.version }}
          tag_name: v${{ needs.prepare.outputs.version }}
          body: |
            ## iRacing Grafana Observability Release v${{ needs.prepare.outputs.version }}
            
            ### Docker Images
            
            ```
            ghcr.io/${{ env.IMAGE_PREFIX }}/${{ env.COLLECTOR_IMAGE_NAME }}:${{ needs.prepare.outputs.version }}
            ghcr.io/${{ env.IMAGE_PREFIX }}/${{ env.DASHBOARD_IMAGE_NAME }}:${{ needs.prepare.outputs.version }}
            ```
            
            ### Changes
            
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: ${{ contains(needs.prepare.outputs.version, '-') }}