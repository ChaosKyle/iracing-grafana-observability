name: Docker Build

on:
  push:
    branches: [ main, master ]
    paths:
      - 'docker/**'
      - 'python/**'
      - '.github/workflows/docker-build.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'docker/**'
      - 'python/**'
      - '.github/workflows/docker-build.yml'
  workflow_dispatch:

env:
  COLLECTOR_IMAGE_NAME: iracing-collector
  DASHBOARD_IMAGE_NAME: iracing-dashboard
  DOCKER_PATH: docker
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}/iracing-grafana-observability

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata for collector
      id: meta-collector
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ env.COLLECTOR_IMAGE_NAME }}
        tags: |
          type=sha,format=short
          type=ref,event=branch
          type=ref,event=pr
    
    - name: Extract metadata for dashboard
      id: meta-dashboard
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ env.DASHBOARD_IMAGE_NAME }}
        tags: |
          type=sha,format=short
          type=ref,event=branch
          type=ref,event=pr
    
    - name: Build collector image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ env.DOCKER_PATH }}/collector/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-collector.outputs.tags }}
        labels: ${{ steps.meta-collector.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build dashboard image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ env.DOCKER_PATH }}/dashboard/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-dashboard.outputs.tags }}
        labels: ${{ steps.meta-dashboard.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ env.COLLECTOR_IMAGE_NAME }}:${{ github.sha }}
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'